{
  "name": "bangk-monorepo",
  "version": "0.0.0",
  "private": true,
  "packageManager": "yarn@1.22.19",
  "scripts": {
    "dot": "dot dev",
    "dot:build": "dot build",
    "dot:generate": "dot generate",
    "symlink": "cd ./node_modules/ && rm -rf ./green_dot && ln -s ../../../modules/green_dot ./green_dot && cd ./.bin && rm -f ./dot && ln -s ../../../../modules/green_dot/src/cli/cliEntryPoint.ts ./dot || echo 'IF IT HAS PERMISSION ERROR PLEASE RUN chmod +x $(realpath ./node_modules/.bin/dot)'",
    "cpgd": "cd ./node_modules/ && rm -rf ./green_dot && cp -r ../../../modules/green_dot ./green_dot",
    "==--->     START     <---==": "",
    "start": "echo ==> ! please start a specific process !",
    "start:bangk-backend-dev": "turbo run start:bangk-backend-dev",
    "start:bangk-backend-test": "turbo run start:bangk-backend-test",
    "start:bangk-backend-docker": "NODE_ENV=docker node ./apps/backend/dist/app.js",
    "start:dd": "yarn --cwd ./apps/dev-dashboard dev",
    "==--->     BUILD     <---==": "",
    "// all packages that needs to be built before file generation must have a prebuild script": " ",
    "// BUILD PHASES: 1) build:allPackagesPhase1 2) buildDb 3) generateFiles 4) build:allPackagesPhase2": "",
    "// All those phases and order are important": " ",
    "build": "yarn build:s3PathGenerate && yarn build:first && generateSdk --onlyDefaults || true && yarn build:second && yarn build:third && yarn build:fourth && yarn build:fifth && yarn build:sixth && generateSdk",
    "tsc": "turbo run tsc",
    "build:prod": "yarn build:s3PathGenerate && yarn build:allPhases",
    "build:docker": "yarn && turbo run build:allPackagesPhase1 && turbo run build:db && turbo run build:allPackagesPhase2 && turbo run generate:files && turbo run build:allPackagesPhase3",
    "build:noCache": "yarn && turbo run build:db --force && turbo run build:allPackagesPhase1 --force && turbo run generate:files --force && turbo run build:allPackagesPhase2",
    "build:backendWatch": "turbo run build:backendWatch --parallel",
    "build:db": "turbo run build:db",
    "build:backend": "cd apps/backend && yarn build",
    "// The below will automatically build index files for any given directory in config": "",
    "buildIndexes": "bun ./scripts/autoIndexes.ts",
    "==--->    GENERATE   <---==": "",
    "generate": "yarn generate:assets && yarn generate:icons && yarn generate:translations",
    "generate:files": "turbo run generate:files",
    "generate:sdk": "generateSdk",
    "generate:sdkDefaults": "generateSdk --onlyDefaults",
    "==--->    TESTING    <---==": "",
    "test:backend-api": "cd ./apps/backend && NODE_ENV=test bun ./src/app.ts",
    "start:backend-ci": "cd ./apps/backend && NODE_ENV=test bun ./src/app.ts",
    "coverage": "bun ./coverage.ts",
    "test": "jest --ci --runInBand --maxConcurrency=1 --silent --no-clean",
    "==--->     CLEAN     <---==": "",
    "clean": "turbo run clean && yarn cleanTurboFiles && yarn deleteAllDistFolders && yarn build",
    "cleanFull": "yarn cleanTurboFiles && yarn deleteAllDistFolders && yarn deleteAllNodeModulesFolders && yarn && yarn build",
    "cleanTurboFiles": "find . -type d -name .turbo -prune -exec rm -rf {} \\;",
    "deleteAllDistFolders": "find . -type d -name dist -not -path '*/node_modules/*' -exec rm -rf {} \\;",
    "deleteAllNodeModulesFolders": "find . -type d -name node_modules -prune -exec rm -rf {} \\;",
    "==--->     MISC      <---==": "",
    "lint": "turbo run lint",
    "countLines": "npx cloc ./ --exclude-dir node_modules",
    "==--->   SHORTCUTS   <---==": "",
    "g": "yarn generate",
    "dd": "yarn start:dd",
    "t": "cd apps/backend && yarn test:api",
    "bbw": "yarn build:backendWatch",
    "==--->   BUILDPHASESFORPROD   <---==": "",
    "build:s3PathGenerate": "ts-node apps/backend/src/aws/getS3KeyMedia.ts",
    "build:first": "yarn buildIndexes || (echo '❌ Step 1 (build:first) failed!' && exit 1)",
    "build:second": "turbo run build:allPackagesPhase1 || (echo '❌ Step 2 (build:second) failed!' && exit 1)",
    "build:third": "turbo run build:db || (echo '❌ Step 3 (build:third) failed!' && exit 1)",
    "build:fourth": "turbo run build:allPackagesPhase2 || (echo '❌ Step 4 (build:fourth) failed!' && exit 1)",
    "build:fifth": "turbo run generate:files || (echo '❌ Step 5 (build:fifth) failed!' && exit 1)",
    "build:sixth": "turbo run build:allPackagesPhase3 || (echo '❌ Step 6 (build:sixth) failed!' && exit 1)",
    "build:allPhases": "yarn build:first && yarn build:second && yarn build:third && yarn build:fourth && yarn build:fifth && yarn build:sixth"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.758.0",
    "@bangk/admin-sdk": "file:./SDKs/adminSdk",
    "@bangk/ico-dashboard-sdk": "file:./SDKs/icoDashboardSdk",
    "@bangk/mobile-app-sdk": "file:./SDKs/mobileAppSdk",
    "@solana/web3.js": "^1.98.0",
    "bcrypt": "^5.1.1",
    "crypto-js": "^4.2.0",
    "good-cop": "^1.3.7",
    "green_dot": "^0.0.4",
    "js-sha256": "^0.11.0",
    "jsonwebtoken": "^9.0.2",
    "moment": "^2.30.1",
    "plaid": "^31.1.0",
    "rest-test2": "^1.0.12",
    "sharp": "^0.33.5",
    "sib-api-v3-typescript": "^2.2.2",
    "topkat-utils": "^1.3.14",
    "typescript": "^5.3.3",
    "typescript-generic-types": "1.0.8",
    "viem": "^2.23.11"
  },
  "devDependencies": {
    "@types/jest": "^29.5.3",
    "@typescript-eslint/eslint-plugin": "^6.6.0",
    "@typescript-eslint/parser": "^6.6.0",
    "babel-jest": "^29.7.0",
    "bun": "^1.1.8",
    "eslint": "^8.56.0",
    "istanbul": "^0.4.5",
    "istanbul-merge": "^2.0.0",
    "jest": "^29.6.2",
    "ts-jest": "^29.1.1"
  },
  "engines": {
    "node": ">=18"
  }
}