---
import * as shiki from "shiki";

interface Props {
  code: string;
  lang?: string;
  title?: string;
  showLineNumbers?: boolean;
  highlight?: string;
}

const {
  code,
  lang = "typescript",
  title,
  showLineNumbers = true,
  highlight,
} = Astro.props;

// Initialize the highlighter
const highlighter = await shiki.createHighlighter({
  themes: ["github-dark"],
  langs: [lang],
});

// Split code into lines for line numbers
const lines = code.split("\n");

// Highlight the code
const html = highlighter.codeToHtml(code, {
  lang,
  theme: "github-dark",
  decorations: [
    {
      // line and character are 0-indexed
      start: { line: 1, character: 0 },
      end: { line: 1, character: 11 },
      properties: { class: "highlighted-word" },
    },
  ],
  transformers: [
    {
      code(node) {
        this.addClassToHast(node, "language-js");
      },
      line(node, line) {
        node.properties["data-line"] = line;
        if ([1, 3, 4].includes(line)) this.addClassToHast(node, "highlight");
      },
      span(node, line, col) {
        node.properties["data-token"] = `token:${line}:${col}`;
      },
    },
  ],
});

// Add line numbers if enabled
const finalHtml = html;
---

<div class="code-block">
  {title && <div class="code-block-title">{title}</div>}
  <div class="code-block-content" set:html={finalHtml} />
</div>

<style>
  .code-block {
    margin: 1.5rem 0;
    border-radius: 0.5rem;
    overflow: hidden;
    background: var(--sl-color-gray-15);
  }

  .code-block-title {
    padding: 0.5rem 1rem;
    background: var(--sl-color-gray-20);
    font-family: var(--sl-font-mono);
    font-size: 0.875rem;
    color: var(--sl-color-gray-70);
  }

  .code-block-content {
    margin: 0;
    padding: 1rem;
  }

  .code-block-content pre {
    margin: 0;
    padding: 0;
    background: transparent !important;
  }

  .code-block-content code {
    font-family: var(--sl-font-mono);
    font-size: 0.875rem;
    line-height: 1.5;
  }

  /* Line numbers styling */
  .line-numbers {
    counter-reset: line;
  }

  .line-numbers .line {
    position: relative;
    display: flex;
  }

  .line-numbers .line::before {
    counter-increment: line;
    content: counter(line);
    display: inline-block;
    width: 2.5em;
    padding-right: 1em;
    margin-right: 1em;
    color: var(--sl-color-gray-50);
    text-align: right;
    user-select: none;
    border-right: 1px solid var(--sl-color-gray-30);
  }
</style>
